<script type="text/x-homegear">
{
    "name": "udp-out",
    "readableName": "UDP output",
    "version": "1.0.0",
    "coreNode": true,
    "maxThreadCount": 0
}
</script>
<script type="text/x-red" data-template-name="udp-out">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> <span data-i18n="node-red:common.label.name"></span></label>
        <input type="text" id="node-input-name" data-i18n="[placeholder]node-red:common.label.name">
    </div>
    <div class="form-row">
        <label for="node-input-hostname"><i class="fa fa-globe"></i> <span data-i18n="udp-out.label.hostname"></span></label>
        <input class="input-append-left" type="text" id="node-input-hostname" placeholder="e.g. 192.168.178.17" style="width:40%;" >
        <label for="node-input-port" style="margin-left:20px; width:35px; "> <span data-i18n="udp-out.label.port"></span></label>
        <input type="text" id="node-input-port" data-i18n="[placeholder]udp-out.label.port" style="width:55px">
    </div>
    <div class="form-row">
        <label for="node-input-input"><i class="fa fa-long-arrow-right"></i> <span data-i18n="udp-out.label.input"></span></label>
        <select id="node-input-input" style="width:180px;">
            <option value="raw" data-i18n="udp-out.label.raw"></option>
            <option value="hex" data-i18n="udp-out.label.hex"></option>
            <option value="json" data-i18n="udp-out.label.json"></option>
        </select>
    </div>
</script>
<script type="text/javascript">
(function() {
    RED.nodes.registerType('udp-out',{
        category: 'network',
        namespace: 'udp',
        defaults: {
            name: {name:""},
            hostname: {value:"localhost",validate: function(v) { return v != ""; }},
            port: {value:"7000",validate: function(v) { return $.isNumeric(v); }},
            input: {value:"hex"}
        },
        color:"#c0c0c0",
        inputs:1,
        inputInfo: [
          {
            types: ["binary"]
          }
        ],
        outputs:0,
        icon: "bridge-dash.svg",
        align: "right",
        label: function() {
            if(this.name) return this.name;
            var b = this.hostname;
            if (b === "") { b = "undefined"; }
            else if(b.indexOf(":") > -1) { b = "[" + b + "]" }
            return b+":"+this.port;
        },
        labelStyle: function() {
            return this.name?"node_label_italic":"";
        }
    });
})();
</script>