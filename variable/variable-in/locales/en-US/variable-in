{
  "variable/variable-in.hni": {
    "variable-in": {
      "label": {
        "variabletype": "Variable type",
        "devicevariable": "Device variable",
        "metadata": "Metadata",
        "systemvariable": "System variable",
        "flowvariable": "Flow variable",
        "globalvariable": "Global variable",
        "family": "Family",
        "peerid": "Peer ID",
        "channel": "Channel",
        "variable": "Variable",
        "eventsource": "Event source",
        "all": "All",
        "device": "Device",
        "homegear": "Homegear",
        "nodeblue": "Node-BLUE",
        "scriptengine": "Script engine",
        "profilemanager": "Variable profile manager",
        "rpcclient": "RPC client",
        "ipcclient": "IPC client",
        "mqtt": "MQTT",
        "refractoryperiod": "Refractory period",
        "outputonstartup": "Output value on startup",
        "changes-only": "Output changes only",
        "name": "Name",
        "loopprevention": "Enable feedback loop prevention",
        "looppreventiongroup": "Loop group",
        "createvariable": "Create variable",
        "typeandvalue": "Value",
        "create": "Create",
        "createnewvariable": "Create new variable"
      },
      "tip": "Tip: See help tab for usage information.",
      "paletteHelp": "<p>Subscribes to variable events.</p>",
      "help": "<p>This node subscribes to variable events. To avoid events from reoccuring too fast, you can set \"Refractory period\" (in ms). To output all events, set \"Refractory period\" to <code>0</code>.<p><p>To inhibit feedback loops (variable 1 sets variable 2 which causes variable 2 to set variable 1) you can enable the feedback loop prevention. Add all variables causing the loop to the same loop prevention group and set a group refractory period long enough to catch all feedback events. The input can be used to force the output of the current variable value.</p>",
      "input1Description": "Forces the output of the current value.",
      "output1Description": "Outputs the referenced variable on every variable update."
    }
  }
}