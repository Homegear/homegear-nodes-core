{
  "basic-logic/variable-switch.hni": {
    "variable-switch": {
      "label": {
        "name": "Name",
        "variabletype": "Variable type",
        "devicevariable": "Device variable",
        "metadata": "Metadata",
        "systemvariable": "System variable",
        "flowvariable": "Flow variable",
        "globalvariable": "Global variable",
        "family": "Family",
        "peerid": "Peer ID",
        "channel": "Channel",
        "variable": "Variable",
        "createvariable": "Create variable",
        "typeandvalue": "Value",
        "create": "Create",
        "createnewvariable": "Create new variable",
        "changes-only": "Forward changes of output only",
        "output-true": "Output \"true\" instead of forwarding the message",
        "output-false": "Output \"false\", too",
        "rule": "rule"
      },
      "and": "and",
      "checkall": "checking all rules",
      "stopfirst": "stopping after first match",
      "ignorecase": "ignore case",
      "rules": {
          "btwn":"is between",
          "cont":"contains",
          "regex":"matches regex",
          "true":"is true",
          "false":"is false",
          "null":"is null",
          "nnull":"is not null",
          "else":"otherwise"
      },
      "previous": "previous value",
      "input": "input",
      "flow": "flow.",
      "global": "global.",
      "env": "env.",
      "paletteHelp": "<p>Route messages based on the value of a variable.</p>",
      "help": "<p>Route messages based on the value of a variable.</p><h3>Details</h3><p>When a message arrives, the node will evaluate each of the defined rules and forward the message to the corresponding outputs of any matching rules.</p><p>Optionally, the node can be set to stop evaluating rules once it finds one that matches.</p><p>Also optionally the node can output <code>true</code> and <code>false</code> instead of forwarding the input payload.</p>",
      "input1Description": "The input triggering the comparison."
    }
  }
}