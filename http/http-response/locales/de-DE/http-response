{
  "http/http-response.hni": {
    "http-response": {
      "paletteHelp": "<p>Sendet Antworten zurück an Anforderungen, die von einem HTTP-Eingabeknoten empfangen wurden.</p>",
      "help": "<p>Sendet Antworten zurück an Anforderungen, die von einem HTTP-Eingabeknoten empfangen wurden.</p><h3>Eingänge</h3><dl class=\"message-properties\"><dt>payload <span class=\"property-type\">Zeichenfolge</span></dt><dd>Der Body der Antwort.</dd><dt class=\"optional\">statusCode <span class=\"property-type\">Nummer</span></dt><dd>Wenn festgelegt, wird dies als Antwortstatuscode verwendet. Standardeinstellung: 200.</dd><dt class=\"optional\">headers <span class=\"property-type\">Objekt</span></dt><dd>Wenn festgelegt, werden HTTP-Header bereitgestellt, die in die Antwort einbezogen werden sollen.</dd><dt class=\"optional\">cookies <span class=\"property-type\">Objekt</span></dt><dd>Wenn gesetzt, können damit Cookies gesetzt oder gelöscht werden.</dd></dl><h3>Details</h3><p>Der <code>statusCode</code> und <code>header</code> können auch innerhalb des Knotens selbst festgelegt werden. Wenn eine Eigenschaft innerhalb des Knotens festgelegt ist, kann sie nicht von der entsprechenden Nachrichteneigenschaft überschrieben werden.</p><h4>Cookie-Behandlung</h4><p>Die Eigenschaft <code>cookies</ code> muss ein Objekt mit Name/Wert-Paaren sein. Der Wert kann entweder eine Zeichenfolge sein um den Wert des Cookies mit Standardoptionen festzulegen, oder er kann ein Objekt von Optionen sein.<p><p>Im folgenden Beispiel werden zwei Cookies festgelegt - einer mit dem Namen <code>name</code> und einem Wert von <code>nick</code>, ein anderer mit dem Namen <code>session</code> und einem Wert von <code>1234</code> mit einem Ablaufdatum von 15 Minuten.</p><pre>$message['cookies'] = {\n    name: 'nick',\n    session: {\n        value: '1234',\n        maxAge: '900000'\n    }\n}</pre><p>Der <code>statusCode</code> und <code>header</code> können auch innerhalb des Knotens selbst festgelegt werden. Wenn eine Eigenschaft innerhalb des Knotens festgelegt ist, kann sie nicht von der entsprechenden Nachrichteneigenschaft überschrieben werden.</p><h4>Cookie-Behandlung</h4><p>Die Eigenschaft <code>cookies</code> muss ein Objekt mit Name/Wert-Paaren sein. Der Wert kann entweder eine Zeichenfolge sein, um den Wert des Cookies mit Standardoptionen festzulegen, oder ein Objekt von Optionen.<p><p>Im folgenden Beispiel werden zwei Cookies festgelegt - eines mit dem Namen <code>name</code> und dem Wert <code>nick</code> und ein anderer mit dem Namen <code>session</code> und dem Wert <code>1234</code> und einem Ablaufdatum von 15 Minuten.</p><pre>$message['cookies'] = {\n    name: 'nick',\n    session: {\n        value: '1234',\n        maxAge: '900000'\n    }\n}</pre><p>Alle Cookie-Attribute sind verfügbar, einschließlich:</p><ul><li><code>domain</code> - (Zeichenfolge) Domainname für den Cookie</li><li><code>expires</code> - (Datum) Verfallsdatum in GMT. Wenn nicht angegeben oder auf 0 gesetzt, wird ein Sitzungscookie erstellt</li><li><code>maxAge</code> - (Zeichenfolge) Ablaufdatum relativ zur aktuellen Zeit in Millisekunden</li><li><code>path</code> - (Zeichenfolge) Pfad für den Cookie. Standardmäßig /</li><li><code>value</code> - (Zeichenfolge) der Wert, der für den Cookie verwendet werden soll.</li></ul><p>Um ein Cookie zu löschen muss dessen <code>value</code> auf <code>null</code> gesetzt werden.</p>",
      "input1Description": "Die zu sendende Antwort.",
      "label": {
            "method": "Methode",
            "url": "URL",
            "doc": "Docs",
            "return": "Rückgabe",
            "upload": "Akzeptiere Datei-Uploads?",
            "status": "Statuscode",
            "headers": "Header",
            "server": "Server"
        },
        "setby": "- gesetzt von msg.method -",
        "basicauth": "Benutze Basic Authentication",
        "use-tls": "Sichere Verbindung (SSL/TLS) benutzen",
        "tls-config":"TLS Konfiguration",
        "utf8": "eine UTF-8 Zeichenfolge",
        "binary": "ein binärer Puffer",
        "json": "ein geparstes JSON-Objekt",
        "tip": {
            "in": "Die URL wird relativ zu ",
            "res": "Die an diesen Knoten gesendeten Nachrichten <b>müssen</b> von einem <i>http-Eingabeknoten</i> stammen",
            "req": "Tipp: Wenn die JSON-Analyse fehlschlägt, wird die abgerufene Zeichenfolge unverändert zurückgegeben."
        },
        "httpreq": "http Anfrage",
        "errors": {
            "not-created": "Der http-in-Knoten kann nicht erstellt werden, wenn httpNodeRoot auf false festgelegt ist",
            "missing-path": "fehlender Pfad",
            "no-response": "Kein Antwortobjekt",
            "json-error": "JSON-Analysefehler",
            "no-url": "Kein URL angegeben",
            "deprecated-call":"Veralteter Anruf an __method__",
            "invalid-transport":"Nicht-http-Transport angefordert"
        }
    }
  }
}